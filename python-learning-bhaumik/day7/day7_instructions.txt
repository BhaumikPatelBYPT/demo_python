Day 7: Mini CRUD API - Book Manager with FastAPI + SQLite

Objective:
Build a Book Manager API with FastAPI and SQLite that supports adding, listing, and deleting books.

Steps:

1. Ensure your virtual environment is activated:
   - On macOS/Linux: `source ai-env/bin/activate`
   - On Windows: `ai-env\Scripts\activate`

2. Install required libraries (if not already installed):
   - `pip install fastapi uvicorn pydantic`

3. Review the code in `day7/day7.py`:
   - The code creates a SQLite database (`books.db`) and a `books` table if not present.
   - Endpoints:
     - `GET /books` to list all books
     - `POST /books` to add a new book (expects JSON: `{ "title": "Book Title", "author": "Author Name" }`)
     - `DELETE /books/{id}` to delete a book by its ID

4. Run the FastAPI server:
   - `uvicorn day7.day7:app --reload`
   - The server will start at `http://127.0.0.1:8000`

5. Demo API Usage:
   - Add a new book:
     ```
     curl -X POST "http://127.0.0.1:8000/books" -H "Content-Type: application/json" -d '{"title": "1984", "author": "George Orwell"}'
     ```
   - List all books:
     ```
     curl "http://127.0.0.1:8000/books"
     ```
   - Delete a book by ID (e.g., ID 1):
     ```
     curl -X DELETE "http://127.0.0.1:8000/books/1"
     ```
   - You can also use Postman or the interactive docs at `http://127.0.0.1:8000/docs`.

6. Understanding:
   - The app uses Python's built-in `sqlite3` module for database operations.
   - All data is stored in `day7/books.db`.
   - FastAPI provides automatic validation and interactive API docs.

You have now built and tested a simple Book Manager CRUD API with FastAPI and SQLite!
